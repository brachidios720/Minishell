# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    tests.txt                                          :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: pag <pag@student.42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/10/07 13:21:23 by spagliar          #+#    #+#              #
#    Updated: 2024/11/10 16:23:08 by pag              ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

//-----------------------------------------------------------------------------

C	echo "hello"
T	hello
M	//OK 10/11

C	echo -n "hello"		
T	hello
M	//print sur la meme ligne mais avec "" 10/11

C	echo "hello" "world"	                            PBME
T	hello world	
M	//print ok mais avec les "" 10/11

C	echo $	                                            PBME
T   $
M	//n'affiche rien 10/11

C	echo -nn		
T	(rien)
M	//OK 10/11

C	echo ---n
T	---n
M	//OK 10/11

C   echo -n $			                                PBME
T   $ sur la meme ligne
M   //n'affiche rien 10/11

// $ :
//-----------------------------------------------------------------------------

C	echo $?+$?                                          PBME
T	0+0
M	//affiche 0 10/11

C	echo $USER                        
T	Affiche la valeur de la variable d'environnement USER -> spagliar
M   //OK 10/11

C	echo $?                         
T	Affiche le code de retour de la dernière commande. -> 0
M	//ok 10/11
    
C	echo $NONEXISTANT
T	Si la variable d'environnement n'existe pas, afficher une chaîne vide ou ignorer cet argument.
M   //OK 10/11





//REDIRECTION :
//-------------

C   echo "hello" < test1.txt                PBME
T   hello
M   //"hello" < output.txt   10/11


C   echo "hello" > test1.txt          
R   ecrase les elements de test1 et remplace cf test1.txt
M   //"hello" > output.txt

C   echo "hello" >> test1.txt         //pas bon
R	laisse les elements et ajoute les nouveaux elements dans test1.txt //"hello" >> test1.txt 

C	 ls > output.txt
R	//cette fonction redirigerait la sortie de la commande ls vers le fichier output.txt au lieu de l'afficher sur l'écran.


//HEREDOC
//-------
C	ls | cat << END	//on utlise les fichiers listes par ls et on redirige ds une autres commande
Ajout	I HATE YOU //on ajoute le texte
Ajout	END //on ajoute le delimiteur
Affiche:I HATE YOU
//le fait de mettre un pipe permet de jouer avec les commandes
	
C	 cat < input.txt, 
R	//la fonction redirigerait l'entrée du fichier input.txt pour que cat lise ce fichier au lieu de lire les entrées du clavier.
C	echo "hello" >> log.txt
R	//la sortie serait ajoutée à la fin du fichier log.txt sans en effacer le contenu existant.

cat
// controler le mode d ouverture des fichiers cf inout_files
//------------------------------------------------------------
- Creer un fichier txt avec une phrase
C echo "Première ligne" > fichier_test.txt
C echo "Ligne sans append" > fichier_test.txt
R : Résultat attendu : Le fichier fichier_test.txt ne devrait contenir que Ligne 
sans append, car le contenu précédent aura été écrasé.

- echo "Ligne avec append" >> fichier_test.txt
R : Résultat attendu : Le fichier fichier_test.txt devrait maintenant
 contenir les lignes suivantes : 
Ligne sans append
Ligne avec append


























/*
* check exit code

* check files perm

* test with tab and/or space and/or enter and/or "" and/or " "

* echo $USER$TESTNOTFOUND$HOME$WTF$PWD

* echo $/ $/ 

* export ___TEST=123

* export HELLO42=T=""

* export T=e E=c S=h L=o test="hey there"
* echo $T$E$S$L$test

* <<a<<"b"<<'c' cat -e|cat -e

* <a<"b"<'c' cat -e|cat -e

* ls|cat Makefile|cat<<'asd'>out

* ls|cat Makefile|cat<<"asd">out

* echo "cat lol.c | cat > lol.c"

* /bin/cat file | /bin/grep bla | more

* <Makefile cat -e| echo hello|cat -e 

* echo hellooo>out|<Makefile cat -e|cat -e>out1>out2

* pwd|cat -e

* <Makefile env|cat -e

* <no_existing|<Makefile cat -e|cat -e

* <Makefile cat -e|<signal.c cat -e >out|wc

* <no_existing|<no_existing2

* exit|exit

* cat >outfile -e<Makefile

* echo $?+$?

* cat -e<<end|cat -e|wc -l>out1

* export USER+=hello

* export salut coucou = bonsoir="hey" cmd="echo salut"
*/
